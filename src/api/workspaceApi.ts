// src/api/workspaceApi.ts
import  apiClient  from '@api/apiClient';
import type {
  Workspace,
  WorkspaceCreatePayload,
  WorkspaceUpdatePayload,
  WorkspaceDetail,
  WorkspaceMember,
} from '@api/types/workspace';

/**
 * L·∫•y t·∫•t c·∫£ workspace m√† user tham gia ho·∫∑c s·ªü h·ªØu
 */
export const fetchWorkspaces = async (): Promise<Workspace[]> => {
  const response = await apiClient.get<Workspace[]>(`/workspaces/`);
  return response.data;
};

/**
 * T·∫°o workspace m·ªõi
 */
export const createWorkspace = async (data: WorkspaceCreatePayload): Promise<Workspace> => {
  const response = await apiClient.post<Workspace>(`/workspaces/`, data);
  return response.data;
};

/**
 * L·∫•y danh s√°ch board trong workspace
 */
export const fetchWorkspaceBoards = async (workspaceId: number): Promise<WorkspaceDetail> => {
  const response = await apiClient.get<WorkspaceDetail>(`/workspaces/${workspaceId}/boards/`);
  return response.data;
};

/**
 * L·∫•y chi ti·∫øt workspace
 */
export const fetchWorkspaceDetail = async (workspaceId: number): Promise<WorkspaceDetail> => {
  const response = await apiClient.get<WorkspaceDetail>(`/workspaces/${workspaceId}/`);
  return response.data;
};

/**
 * C·∫≠p nh·∫≠t workspace (t√™n / ch√≠nh s√°ch t·∫°o board)
 */
export const updateWorkspace = async (
  workspaceId: number,
  data: WorkspaceUpdatePayload
): Promise<Workspace> => {
  const response = await apiClient.patch<Workspace>(`/workspaces/${workspaceId}/`, data);
  return response.data;
};

/**
 * X√≥a workspace
 */
export const deleteWorkspace = async (workspaceId: number): Promise<void> => {
  await apiClient.delete(`/workspaces/${workspaceId}/`);
};

/* ==========================================================
   üë• MEMBERS
========================================================== */

/**
 * L·∫•y danh s√°ch th√†nh vi√™n trong workspace
 */
export const fetchWorkspaceMembers = async (workspaceId: number): Promise<WorkspaceMember[]> => {
  const response = await apiClient.get<WorkspaceMember[]>(`/workspaces/${workspaceId}/members/`);
  return response.data;
};

/**
 * M·ªùi th√†nh vi√™n m·ªõi
 */
export const inviteWorkspaceMember = async (
  workspaceId: number,
  userId: number,
  role: 'admin' | 'member'
): Promise<WorkspaceMember> => {
  const response = await apiClient.post<WorkspaceMember>(`/workspaces/${workspaceId}/members/`, {
    user_id: userId,
    role,
  });
  return response.data;
};

/**
 * C·∫≠p nh·∫≠t quy·ªÅn c·ªßa th√†nh vi√™n trong workspace
 */
export const updateWorkspaceMemberRole = async (
  workspaceId: number,
  userId: number,
  role: 'admin' | 'member'
): Promise<WorkspaceMember> => {
  const response = await apiClient.patch<WorkspaceMember>(`/workspaces/${workspaceId}/members/`, {
    user_id: userId,
    role,
  });
  return response.data;
};

/**
 * X√≥a th√†nh vi√™n kh·ªèi workspace
 */
export const removeWorkspaceMember = async (workspaceId: number, userId: number): Promise<void> => {
  await apiClient.delete(`/workspaces/${workspaceId}/members/`, { data: { user_id: userId } });
};
